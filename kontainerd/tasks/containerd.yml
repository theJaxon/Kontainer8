---
- name: Enable needed kernel modules for containerd
  blockinfile:
    block: |
      overlay 
      br_netfilter
    path: /etc/modules-load.d/containerd.conf
    create: true

- name: Load kernel modules 
  modprobe:
    name: "{{ item }}"
    state: present
  loop: "{{ kernel_modules }}"

- name: Configure kubernetes networking settings 
  sysctl:
    name: "{{ item }}"
    value: '1'
    reload: true 
    sysctl_set: true 
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
    state: present
  loop: "{{ kernel_parameters_list }}"

- name: Check architecture
  set_fact:
    arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

- name: "Download containerd {{ containerd_version }}"
  get_url: 
    url: "https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-{{ arch }}.tar.gz"
    dest: "/tmp/containerd-{{ containerd_version }}-linux-{{ arch }}.tar.gz"
    force: no

- name: Extract and place containerd in correct location
  unarchive:
    src: "/tmp/containerd-{{ containerd_version }}-linux-{{ arch }}.tar.gz"
    dest: /usr/bin
    extra_opts: [--strip-components=1] # Ignore outer bin file containing containerd binaries

- name: Place containerd service in correct location
  copy:
    src: containerd.service
    dest: /lib/systemd/system/containerd.service

- name: Install runc
  get_url:
    url: "https://github.com/opencontainers/runc/releases/download/v{{ runc_version }}/runc.{{ arch }}"
    dest: /usr/local/sbin/runc
    mode: '755'

- name: Generate containerd default configuration file
  shell: "containerd config default"
  register: containerd_config
  changed_when: false

- set_fact:
    containerd_config: "{{ containerd_config['stdout'] }}"

- name: create containerd directory 
  file:
    path: /etc/containerd
    state: directory

- name: Copy crictl config file
  copy:
    src: crictl.yaml
    dest: /etc/crictl.yaml
    owner: vagrant
    group: vagrant

- name: Save containerd configuration to a file and restart containerd service
  local_action: 
    module: copy
    content: "{{ containerd_config }}"
    dest: /etc/containerd/config.toml

- name: Enable SystemdCgroup 
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: SystemdCgroup = false
    line: SystemdCgroup = true
    state: present
  notify: restart containerd service

- name: Enable containerd
  service:
    name: containerd
    enabled: true